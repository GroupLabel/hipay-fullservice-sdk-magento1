version: 2
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    environment:
      TZ: "/usr/share/zoneinfo/Europe/paris"
    hosts:
      local-magento.hipay.com: 127.0.0.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: apt-get update && apt-get -y install curl wget tar bzip2 npm docker-compose
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install PhantomJs
          command: |
            wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2
            ls /usr/bin
            mv phantomjs-2.1.1-linux-x86_64 /usr/bin
            chmod a+x /usr/bin/phantomjs-2.1.1-linux-x86_64
            ln -s --force /usr/bin/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
      - run:
          name: Install CasperJS
          command: |
            npm install -g casperjs@1.1.3
            npm install -g junit-viewer
      - run:
          name: Configure Environment
          command: |
            sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_TEST/" ./bin/conf/stage/hipay.env.sample
            sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_TEST/" ./bin/conf/stage/hipay.env.sample
            sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_TEST/" ./bin/conf/stage/hipay.env.sample
            sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_TEST/" ./bin/conf/stage/hipay.env.sample
            sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_TEST/" ./bin/conf/stage/hipay.env.sample
            sed -i -e "s/{LOGIN_BACKEND\}/$LOGIN_BACKEND/" ./bin/conf/stage/test.env.sample
            sed -i -e "s/{PASS_BACKEND\}/$PASS_BACKEND/" ./bin/conf/stage/test.env.sample
            sed -i -e "s/{LOGIN_PAYPAL\}/$LOGIN_PAYPAL/" ./bin/conf/stage/test.env.sample
            sed -i -e "s/{PASS_PAYPAL\}/$PASS_PAYPAL/" ./bin/conf/stage/test.env.sample
      - run: echo 127.0.0.1 local-magento.hipay.com | tee -a /etc/hosts
      - run:
          name: Build and Generate DockerFile
          command: |
            mkdir $CIRCLE_ARTIFACTS/casper_report
            mkdir $CIRCLE_ARTIFACTS/screenshots
            sh bin/docker/generate_dockerfile.sh
  test:
    docker:
      - image: ubuntu:16.04
    steps:
      - run:
          name: Lauch TEST PHP 5.6
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.stage.yml build --no-cache
            docker-compose -f docker-compose.yml -f docker-compose.stage.yml up -d
            sleep 60
            curl --retry 30 --retry-delay 3 -v $MAGENTO_URL:$PORT_WEB
            curl --retry 30 --retry-delay 3 -v $URL_MAILCATCHER
            sh bin/tests/casper_run_circle.sh
            junit-viewer --results=bin/tests/result.xml --save=bin/tests/report-php5-6.html --minify=false --contracted
            if [ -d bin/tests/errors/ ]; then mkdir $CIRCLE_ARTIFACTS/screenshots/php5-6; cp bin/tests/errors/* $CIRCLE_ARTIFACTS/screenshots/php5-6; rm -rf bin/tests/errors/; fi
      - run:
         name: Lauch TEST PHP 7
         command: |
           docker-compose stop
           docker-compose rm -fv
           docker-compose -f docker-compose.yml -f docker-compose.stage-php7-0.yml build --no-cache
           docker-compose -f docker-compose.yml -f docker-compose.stage-php7-0.yml up -d
           sleep 60
           curl --retry 30 --retry-delay 3 -v $MAGENTO_URL:$PORT_WEB
           sh bin/tests/casper_run_circle.sh
           junit-viewer --results=bin/tests/result.xml --save=bin/tests/report-php7-0.html --minify=false --contracted
           if [ -d bin/tests/errors/ ]; then mkdir $CIRCLE_ARTIFACTS/screenshots/php7-0; cp bin/tests/errors/* $CIRCLE_ARTIFACTS/screenshots/php7-0; fi
           cp bin/tests/report-php5-6.html $CIRCLE_ARTIFACTS/casper_report/
           cp bin/tests/report-php7-0.html $CIRCLE_ARTIFACTS/casper_report/
workflows:
 version: 2
 build_and_test:
  jobs:
   - build
   - test:
       requires:
         - build
